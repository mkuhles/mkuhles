---
interface Props {
  className?: string;
  id?: string;
}

let { className, id } = Astro.props
if (!id) {
  id = 'flip-card-' + Math.random().toString(36).substring(2, 9);
}
--- 

<div class={ className + ' flip-card'}
    id={id}
    tabindex="0"
    role="button"
    aria-controls={id + '-inner'}
    aria-expanded="false"
>
    <div class='flip-card-inner flip-trigger' aria-label="Vorderseite" id={id + '-inner'}>
        <div class="flip-card-front">
            <slot name="front" />
        </div>
        <div class="flip-card-back flip-trigger" aria-label="RÃ¼ckseite">
            <slot name="back" />
        </div>
    </div>
</div>

<style lang="scss" scoped>

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
  background-color: transparent;
  width: var(--circle-element-diameter);
  height: var(--circle-element-diameter);
  border-radius: 50%;
    
  /* border: 1px solid #f1f1f1; */
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

/* Keyboard-Fokus soll flippen wie Hover: */
.flip-card:focus-within .flip-card-inner,
.flip-card:focus-visible .flip-card-inner{
  transform: rotateY(180deg);
}

/* Reduced motion: nicht drehen, siehe dein R-Media-Query */
@media (prefers-reduced-motion: reduce){
  .flip-card-inner{ transition:none; transform:none; }
}

/* Position the front and back side */
.flip-card-front, .flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  
  border-radius: 50%;
  background-color: var(--background-primary);
  background-position: center;
  background-size: 20vmin;
  box-shadow: 0px 0px 10px var(--shadow-color);
  color: var(--text-color);
  
  display: flex;
  justify-content: center;
  align-items: center;

  &-inner {
    max-width: 100%;
    max-height: 100%;
  }

  *:focus,
  *:focus-visible {
    outline: 2px dashed var(--light-green);
    outline-offset: 2px;
  }
}

/* Style the back side */
.flip-card-back {
  transform: rotateY(180deg);
  font-size: 2vmin;

  a.btn {
    margin: auto;
  }
}

.flip-card-back-inner {
  padding: 3.5vmin 3vmin 2.5vmin 3vmin;
}


*:focus,
*:focus-visible {
  outline: 2px dashed var(--black);
  outline-offset: 1vmin;
  border-radius: 50%;
}
</style>