---
import SkillElement from "./SkillElement.astro";
import {skills} from "../../data/mkuhles.json";
import { COLOR_SCALE } from "../../scripts/collorCalculations";

const {lang} = Astro.props;
const colorScaleString = COLOR_SCALE.join();
---
<div class="flex-center">
  <div class="scale">
    <div class="scale__top">{"Grundlagen"}</div>
    <div class="scale__bottom">{"Expertenwissen"}</div>
  </div>
  <div id="circle-container" class="circle-container">
    <div class="center-element circle">{lang == 'de' ? "Ich kann" : "my skills"}</div>
    {skills.map( (skill) => <SkillElement skill={skill} /> )}
  </div>
</div>

<style define:vars={{colorScaleString}}>
/* Legende als Verlauf */
.scale {
  position: relative;
  width: 12px;
  height: 80vmin;
  background: linear-gradient(to bottom,
    var(--colorScaleString));
}
.scale__top {
  position: absolute;
  top: 0;
  left: 18px;
}
.scale__bottom {
  position: absolute;
  bottom: 0;
  left: 18px;
}

</style>

<script>        
  import useCircleAnimation from "../../scripts/useCircleAnimation";

  const mq = window.matchMedia('(prefers-reduced-motion: reduce)');
  document.documentElement.classList.toggle('reduced-motion', mq.matches);
  mq.addEventListener?.('change', e =>
    document.documentElement.classList.toggle('reduced-motion', e.matches)
  );
  mq.addListener?.(e =>
    document.documentElement.classList.toggle('reduced-motion', e.matches)
  ); // Fallback

const container = document.getElementById('circle-container');
let stopAnimation: (() => void) | undefined | null = null;

function start() {
    if (!stopAnimation) {
        stopAnimation = useCircleAnimation(mq.matches); // startet animation und gibt cleanup zurÃ¼ck
    }
}
  function stop() {
    if (stopAnimation) {
      stopAnimation();
      stopAnimation = null;
    }
  }

const onScroll = () => {
    if(!container) return;
    const rect = container.getBoundingClientRect();
    const inView = rect.top < window.innerHeight * 0.85 && rect.bottom > 0;
    if (inView) start(); else stop();
};
  window.addEventListener('scroll', onScroll, { passive: true });
  onScroll();
  window.addEventListener('beforeunload', () => { window.removeEventListener('scroll', onScroll); stop(); });
</script>